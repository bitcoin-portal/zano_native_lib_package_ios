// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios16.0 -enable-objc-interop -cxx-interoperability-mode=default -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name zano_ios
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import zano_ios
public typealias ZANOString = Swift.UnsafeRawPointer
public var asyncCallMethods: [Swift.String] {
  get
}
public enum ZanoWallet {
  public static func InitIpPort(ip: Swift.String, port: Swift.String, working_dir: Swift.String, log_level: Swift.Int32) -> Swift.String
  public static func reset() -> Swift.String
  public static func getVersion() -> Swift.String
  public static func getWalletNames() -> Swift.String
  public static func deleteWallet(file_name: Swift.String) -> Swift.String
  public static func getAddressInfo(addr: Swift.String) -> Swift.String
  public static func getLogsBuffer() -> Swift.String
  public static func truncateLog() -> Swift.String
  public static func getConnectivityStatus() -> Swift.String
  public static func restore(seed: Swift.String, walletName: Swift.String, password: Swift.String, seed_password: Swift.String) -> Swift.String
  public static func generate(walletName: Swift.String, password: Swift.String) -> Swift.String
  public static func getOpenedWallets() -> Swift.String
  public static func asyncCall(methodName: Swift.String, walletId: Swift.UInt64, params: Swift.String) throws -> Swift.String
  public static func asyncGetRestoreInfo(jobId: Swift.UInt64) async -> Swift.String
  public static func asyncGetWalletStatus(jobId: Swift.UInt64) async -> Swift.String
  public static func asyncRestore(jobId: Swift.UInt64) async -> Swift.String
  public static func asyncGetBalance(jobId: Swift.UInt64) async -> Swift.String
  public static func asyncOpen(jobId: Swift.UInt64) async -> Swift.String
  public static func asyncClose(jobId: Swift.UInt64) async throws -> Swift.String
  public static func getCurrentTxFee(priority: Swift.UInt64) -> Swift.UInt64
}
public enum ZANOError : Swift.Error {
  case errorResponse(code: Swift.String, message: Swift.String)
  case asyncErrorResponse(status: Swift.String, code: Swift.String, message: Swift.String)
  case unknown(message: Swift.String)
  case conversionFailure(message: Swift.String)
}
